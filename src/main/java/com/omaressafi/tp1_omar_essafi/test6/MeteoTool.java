package com.omaressafi.tp1_omar_essafi.test6;

import dev.langchain4j.agent.tool.Tool;

import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

/**
 * Outil m√©t√©o qui utilise l'API wttr.in
 */
public class MeteoTool {

    /**
     * Obtient la m√©t√©o actuelle d'une ville
     * @param ville Le nom de la ville
     * @return Les informations m√©t√©o de la ville
     */
    @Tool("Obtient la m√©t√©o actuelle d'une ville donn√©e en temps r√©el")
    public String obtenirMeteo(String ville) {
        try {
            // Cr√©ation du client HTTP
            HttpClient client = HttpClient.newHttpClient();

            // Cr√©ation de la requ√™te vers wttr.in
            // format=3 donne un format court: "Ville: üå§Ô∏è +15¬∞C"
            String url = "https://wttr.in/" + ville + "?format=3";
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(URI.create(url))
                    .GET()
                    .build();

            // Envoi de la requ√™te et r√©cup√©ration de la r√©ponse
            HttpResponse<String> response = client.send(request,
                    HttpResponse.BodyHandlers.ofString());

            // Retourne le corps de la r√©ponse
            return response.body();

        } catch (IOException | InterruptedException e) {
            return "Impossible d'obtenir la m√©t√©o pour " + ville +
                    ". Erreur: " + e.getMessage();
        }
    }

    // M√©thode de test pour tester l'outil directement
    public static void main(String[] args) {
        MeteoTool tool = new MeteoTool();

        System.out.println("Test de l'outil m√©t√©o:");
        System.out.println("Paris: " + tool.obtenirMeteo("Paris"));
        System.out.println("Casablanca: " + tool.obtenirMeteo("Casablanca"));
        System.out.println("Tokyo: " + tool.obtenirMeteo("Tokyo"));
    }
}